{"version":3,"sources":["FoursquareAPI.js","restaurantList.js","MapDetail.js","App.js","serviceWorker.js","index.js"],"names":["getRestaurant","id","fetch","concat","then","response","ok","Error","statusText","json","catch","error","console","log","locations","name","location","lat","lng","address","tags","foursquareId","MapDetail","foursquareInfo","this","props","imageURL","venue","bestPhoto","prefix","suffix","city","state","phone","contact","formattedPhone","rating","react_default","a","createElement","className","src","alt","price","message","likes","count","Component","App","selectedRestaurant","selectedRestaurantInfo","loaded","locationMap","query","result","noResult","selected","currentPosition","alertType","alertMessage","sidebar","resetMap","_this","setState","resetSelection","throwError","string","closeError","toggleSidebar","updateQuery","match","RegExp","escapeRegExp","searchedLocation","filter","test","updateSelectedRestaurant","data","fetchRestaurant","FoursquareAPI","res","mapInfo","_this2","_this$state","src_MapDetail","class","onClick","event","type","tabIndex","role","placeholder","value","onChange","target","length","map","key","Map","center","zoom","zoomControl","ontileerror","ZoomControl","position","TileLayer","attribution","url","Marker","Popup","onPopupclose","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mQAMaA,EAAgB,SAACC,GAAD,OAEzBC,MAAK,GAAAC,OARG,6BAQH,eAAAA,OAAqBF,EAArB,eAAAE,OAPS,mDAOT,mBAAAA,OANa,mDAMb,OAAAA,OALO,aAMXC,KAAK,SAASC,GACb,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,IACND,KAAK,SAASC,GACf,OAAOA,EAASI,SACfC,MAAM,SAASC,GAChBC,QAAQC,IAAIF,+DCjBLG,EAAY,CAAC,CACdC,KAAM,YACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,gCACTC,KAAM,oBACNC,aAAc,4BACb,CACDN,KAAM,aACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,gCACTC,KAAM,yBACNC,aAAc,4BACb,CACDN,KAAM,YACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,sBACTC,KAAM,mDACNC,aAAc,4BACb,CACDN,KAAM,cACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,0BACTC,KAAM,6DACNC,aAAc,4BACb,CACDN,KAAM,aACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,uBACTC,KAAM,iBACNC,aAAc,4BACb,CACDN,KAAM,cACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,0BACTC,KAAM,oDACNC,aAAc,4BACb,CACDN,KAAM,aACNC,SAAU,CAACC,IAAK,SAAUC,KAAM,YAChCC,QAAS,2BACTC,KAAM,yDACNC,aAAc,4BACb,CACDN,KAAM,mBACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,+BACTC,KAAM,yDACNC,aAAc,4BACb,CACDN,KAAM,YACNC,SAAU,CAACC,IAAK,SAAUC,KAAM,YAChCC,QAAS,+BACTC,KAAM,yBACNC,aAAc,4BACb,CACDN,KAAM,wBACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,yBACTC,KAAM,yCACNC,aAAc,4BACb,CACDN,KAAM,eACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,0BACTC,KAAM,yBACNC,aAAc,4BACb,CACDN,KAAM,qBACNC,SAAU,CAACC,IAAK,UAAWC,KAAM,YACjCC,QAAS,0BACTC,KAAM,oBACNC,aAAc,6BCjCXC,mLA/BJ,IACCC,EAAmBC,KAAKC,MAAxBF,eAEJG,EAAWH,EAAelB,SAASsB,MAAMC,UAAUC,OAAS,UAAYN,EAAelB,SAASsB,MAAMC,UAAUE,OAChHX,EAAUI,EAAelB,SAASsB,MAAMX,SAASG,QAAU,KAAOI,EAAelB,SAASsB,MAAMX,SAASe,KAAO,KAAOR,EAAelB,SAASsB,MAAMX,SAASgB,MAC9JC,EAAQV,EAAelB,SAASsB,MAAMO,QAAQC,eAC9CC,EAASb,EAAelB,SAASsB,MAAMS,OAAS,aASlD,OANGb,EAAelB,SAASsB,MAAMX,SAASG,UACzCA,EAAU,sBAAwBI,EAAelB,SAASsB,MAAMX,SAASe,KAAO,KAAOR,EAAelB,SAASsB,MAAMX,SAASgB,OAC5HT,EAAelB,SAASsB,MAAMO,QAAQC,iBACxCF,EAAQ,mBACNV,EAAelB,SAASsB,MAAMS,SAChCA,EAAS,sBAERC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAKhB,EAAelB,SAASsB,MAAMZ,MACjCsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,IAAKf,EAAUgB,IAAKnB,EAAelB,SAASsB,MAAMZ,OACjFsB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQrB,GACrBkB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAuCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBjB,EAAelB,SAASsB,MAAMgB,MAAMC,UAC3GP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwCP,GACxCI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBjB,EAAelB,SAASsB,MAAMkB,MAAMC,MAArE,4BACAT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,WAAyCJ,IAE3CC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,0CA9BcO,aC8LTC,oNAtKbhB,MAAQ,CACNiB,mBAAoB,GACpBC,uBAAwB,GACxBC,QAAQ,EACRrC,UAAWA,EACXsC,YAAatC,EAAUE,SACvBqC,MAAO,GACPC,OAAQ,GACRC,UAAU,EACVC,UAAU,EACVC,gBAAiB,CAAC,YAAa,aAC/BC,UAAW,GACXC,aAAc,GACdC,SAAS,KAGXC,SAAW,WACTC,EAAKC,SAAS,CAAEP,UAAU,EAAOG,aAAc,QAGjDK,eAAiB,WACfF,EAAKC,SAAS,CAAEb,uBAAwB,GAAIC,QAAQ,EAAOQ,aAAc,QAG3EM,WAAa,SAACC,GACZJ,EAAKC,SAAS,CAACL,UAAW,QAASC,aAAcO,OAEnDC,WAAa,WACXL,EAAKC,SAAS,CAACL,UAAW,GAAIC,aAAc,QAG9CS,cAAgB,WACVN,EAAK9B,MAAM4B,QACbE,EAAKC,SAAS,CAACH,SAAS,IAExBE,EAAKC,SAAS,CAACH,SAAS,OAI5BS,YAAc,SAAChB,GAEb,GADAS,EAAKC,SAAS,CAAEV,UACZA,EAAO,CACP,IAAMiB,EAAQ,IAAIC,OAAOC,IAAanB,GAAQ,KAC1CoB,EAAmBX,EAAK9B,MAAMlB,UAAU4D,OAAO,SAAC1D,GAAD,OAAcsD,EAAMK,KAAK3D,EAASD,OAASuD,EAAMK,KAAK3D,EAASI,QAClH0C,EAAKC,SAAS,CAACT,OAAQmB,EAAkBlB,UAAU,EAAOC,UAAU,SAEpEM,EAAKC,SAAS,CAACT,OAAQ,GAAIC,UAAU,EAAMC,UAAU,OAI3DoB,yBAA2B,SAACC,GAC1Bf,EAAKC,SAAS,CAACd,mBAAoB4B,EAAMrB,UAAU,EAAML,QAAQ,EAAOM,gBAAiBoB,EAAK7D,cAGhG8D,gBAAkB,SAAC7E,GACjB8E,EAA4B9E,GAC3BG,KAAK,SAAC4E,GAASlB,EAAKC,SAAS,CAACb,uBAAwB8B,MACtD5E,KAAK,SAAA4E,GACAlB,EAAK9B,MAAMkB,uBACbY,EAAKC,SAAS,CAACZ,QAAQ,IAGvBW,EAAKC,SAAS,CAACZ,QAAQ,EAAOO,UAAW,QAASC,aAAc,+GAI7D,IAEHsB,EAQErC,EAVCsC,EAAA1D,KAAA2D,EACyJ3D,KAAKQ,MAA7JiB,EADDkC,EACClC,mBAAoBS,EADrByB,EACqBzB,UAAWE,EADhCuB,EACgCvB,QAAS9C,EADzCqE,EACyCrE,UAAWuC,EADpD8B,EACoD9B,MAAOC,EAD3D6B,EAC2D7B,OAAQC,EADnE4B,EACmE5B,SAAUC,EAD7E2B,EAC6E3B,SAAUC,EADvF0B,EACuF1B,gBAAiBP,EADxGiC,EACwGjC,uBAAwBC,EADhIgC,EACgIhC,OAAQQ,EADxIwB,EACwIxB,aAG3IR,EACF8B,EACE5C,EAAAC,EAAAC,cAAC6C,EAAD,CAAW7D,eAAgB2B,KAM3BN,EADEe,GAGQ,aAEZsB,EACE5C,EAAAC,EAAAC,cAAA,SAAIK,IAGR,OACEP,EAAAC,EAAAC,cAAA,WACiB,UAAdmB,GACDrB,EAAAC,EAAAC,cAAA,OAAK8C,MAAM,eACThD,EAAAC,EAAAC,cAAA,UAAQ+C,QAAS,SAACC,GAAD,OAAWL,EAAKf,eAAjC,SACCR,IAGDC,GACFvB,EAAAC,EAAAC,cAAA,UAAQiD,KAAK,SAAShD,UAAU,kCAAkCiD,SAAS,IAAIH,QAAS,SAACC,GAAD,OAAWL,EAAKd,kBAAxG,eAECR,GACDvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQiD,KAAK,SAAShD,UAAU,oCAAoCiD,SAAS,IAAIH,QAAS,SAACC,GAAD,OAAWL,EAAKd,kBAA1G,eACA/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,wBAEFH,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,OAAOhD,UAAU,2BAA2BkD,KAAK,SAASC,YAAY,SAASF,SAAS,IAAIG,MAAOvC,EAC3GwC,SAAU,SAACN,GAAD,OAAWL,EAAKb,YAAYkB,EAAMO,OAAOF,QAAQN,QAAS,SAACC,GAAD,OAAWL,EAAKrB,cACrFP,EAAOyC,OAAS,GACjB1D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCACXc,EAAO0C,IAAI,SAAChF,GAAD,OACZqB,EAAAC,EAAAC,cAAA,MAAI0D,IAAKjF,EAASK,aAAcqE,KAAK,QAAOrD,EAAAC,EAAAC,cAAA,UAAQkD,SAAS,IAAIH,QAAS,SAACC,GAAD,OAAWL,EAAKN,yBAAyB5D,KAAYA,EAASD,UAI3IwC,GACClB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCACX1B,EAAUkF,IAAI,SAAChF,GAAD,OACbqB,EAAAC,EAAAC,cAAA,MAAI0D,IAAKjF,EAASK,aAAcqE,KAAK,QAAOrD,EAAAC,EAAAC,cAAA,UAAQkD,SAAS,IAAIH,QAAS,SAACC,GAAD,OAAWL,EAAKN,yBAAyB5D,KAAYA,EAASD,UAIzH,IAAlBuC,EAAOyC,SAAiBxC,GACvBlB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAmCiD,SAAS,KAC1DpD,EAAAC,EAAAC,cAAA,0BAKNF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OAAQ1C,EACR2C,KAAM,GACNd,QAAS,SAACC,GAAD,OAAWL,EAAKrB,YACzBwC,aAAa,EACbC,YAAa,SAACf,GAAD,OAAWL,EAAKjB,WAAW,oEACxCyB,KAAK,eAELrD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAaC,SAAS,aACtBnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACAC,YAAY,yEACZC,IAAI,0CAA0CL,YAAa,SAACf,GAAD,OAAWL,EAAKjB,WAAW,uEAEtFT,GAAYF,EAAO0C,IAAI,SAAChF,GAAD,OACvBqB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQX,IAAG,UAAA9F,OAAYa,EAASK,cAAgBpB,GAAE,UAAAE,OAAYa,EAASK,cAAgBmF,SAAUxF,EAASA,SAAUsE,QAAS,SAACC,GAAD,OAAWL,EAAKJ,gBAAgB9D,EAASK,gBACtKgB,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOrE,UAAU,gBAAgBvC,GAAIe,EAASK,aAAc4E,IAAG,SAAA9F,OAAWa,EAASK,eAC/E4D,OAIJzB,GAAYD,GAAYzC,EAAUkF,IAAI,SAAChF,GAAD,OACtCqB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQX,IAAG,UAAA9F,OAAYa,EAASK,cAAgBpB,GAAE,UAAAE,OAAYa,EAASK,cAAgBmF,SAAUxF,EAASA,SAAUsE,QAAS,SAACC,GAAD,OAAWL,EAAKJ,gBAAgB9D,EAASK,eAAeyF,aAAc,SAACvB,GAAD,OAAWL,EAAKlB,mBACnN3B,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOrE,UAAU,gBAAgBvC,GAAIe,EAASK,aAAc4E,IAAG,SAAA9F,OAAWa,EAASK,eAC/E4D,MAILzB,GACCnB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQX,IAAG,UAAA9F,OAAY8C,EAAmB5B,cAAgBmF,SAAUvD,EAAmBjC,SAAUsE,QAAS,SAACC,GAAD,OAAWL,EAAKJ,gBAAgB7B,EAAmB5B,gBAC7JgB,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOrE,UAAU,gBAAgBvC,GAAIgD,EAAmB5B,aAAc4E,IAAG,SAAA9F,OAAW8C,EAAmB5B,eACnG4D,aA7KIlC,cCEZgE,EAAcC,QACW,cAA7BC,OAAOjG,SAASkG,UAEe,UAA7BD,OAAOjG,SAASkG,UAEhBD,OAAOjG,SAASkG,SAAS5C,MACvB,2DAsCN,SAAS6C,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThH,KAAK,SAAAqH,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3F,QACfsF,UAAUC,cAAcO,YAI1BlH,QAAQC,IACN,gHAKEwG,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7G,QAAQC,IAAI,sCAGRwG,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,SAO5B/G,MAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,KCvFjEsH,IAASC,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,yBAAwBtB,OAAOjG,UAC3CwH,SAAWvB,OAAOjG,SAASwH,OAIvC,OAGFvB,OAAOwB,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAjH,OAAMoI,yBAAN,sBAEPxB,GA6DV,SAAiCK,EAAOC,GAEtCnH,MAAMkH,GACHhH,KAAK,SAAAC,GAGkB,MAApBA,EAASqI,SACuD,IAAhErI,EAASsI,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CvB,UAAUC,cAAcuB,MAAM1I,KAAK,SAAAqH,GACjCA,EAAasB,aAAa3I,KAAK,WAC7B6G,OAAOjG,SAASgI,aAKpB7B,EAAgBC,EAAOC,KAG1B3G,MAAM,WACLE,QAAQC,IACN,mEAjFAoI,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAM1I,KAAK,WACjCQ,QAAQC,IACN,+GAMJsG,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.e5015029.chunk.js","sourcesContent":["const url = 'https://api.foursquare.com'\r\nconst CLIENT_ID = 'CX5YHC2KT4US3CNEUCVJRLQ1Z4TNTKP2IYKCPJFNNHWW3EWH'\r\nconst CLIENT_SECRET = 'OQU5CNIMZAEM51Y5KNQIPH0T0IPNA4XBDWG200ZFBODOUDAZ'\r\nconst VERSION = '20181105'\r\n\r\n// Fetches data from FourSquare\r\nexport const getRestaurant = (id) =>\r\n// see https://www.tjvantoll.com/2015/09/13/fetch-and-errors/\r\n    fetch(`${url}/v2/venues/${id}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=${VERSION}`)\r\n    .then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    }).then(function(response) {\r\n      return response.json();\r\n    }).catch(function(error) {\r\n      console.log(error);\r\n    })\r\n","export const locations = [{\r\n            name: \"Barista's\",\r\n            location: {lat: 37.738299, lng: -121.428354},\r\n            address: \"112 W. 10th Street, Tracy, CA\",\r\n            tags: \"coffee, cafe, tea\",\r\n            foursquareId: \"4b8016ccf964a520145130e3\"\r\n          }, {\r\n            name: \"Tracy Thai\",\r\n            location: {lat: 37.739229, lng: -121.426131},\r\n            address: \"1035 N Central Ave, Tracy, CA\",\r\n            tags: \"restaurant, food, thai\",\r\n            foursquareId: \"4b9aa92bf964a520b6ca35e3\"\r\n          }, {\r\n            name: \"The Press\",\r\n            location: {lat: 37.738864, lng: -121.429076},\r\n            address: \"A Street, Tracy, CA\",\r\n            tags: \"bar, restaurant, wine, pub, beer, burgers, steak\",\r\n            foursquareId: \"5a0e4af16f0aa20fbffe2c03\"\r\n          }, {\r\n            name: \"Delta Brews\",\r\n            location: {lat: 37.738598, lng: -121.427212},\r\n            address: \"47 W 10th St, Tracy, CA\",\r\n            tags: \"bar, restaurant, pub, beer, wine, american, burgers, steak\",\r\n            foursquareId: \"549f4134498ebcdda7412125\"\r\n          }, {\r\n            name: \"Sweet Arts\",\r\n            location: {lat: 37.738959, lng: -121.427737},\r\n            address: \"1020 B St, Tracy, CA\",\r\n            tags: \"bakery, sweets\",\r\n            foursquareId: \"55fd9ead498ea5a0043ee2fd\"\r\n          }, {\r\n            name: \"THE|COMMONS\",\r\n            location: {lat: 37.738676, lng: -121.427106},\r\n            address: \"49 W 10th St, Tracy, CA\",\r\n            tags: \"bar, restaurant, pub, beer, wine, american, steak\",\r\n            foursquareId: \"534c5210498e28c868cd9ff3\"\r\n          }, {\r\n            name: \"Bistro 135\",\r\n            location: {lat: 37.73876, lng: -121.428705},\r\n            address: \"135 W 10th St, Tracy, CA\",\r\n            tags: \"bar, restaurant, pub, beer, wine, american, steakhouse\",\r\n            foursquareId: \"5704519d498e87cf57eb55d5\"\r\n          }, {\r\n            name: \"Helm's Ale House\",\r\n            location: {lat: 37.734977, lng: -121.425592},\r\n            address: \"600 N Central Ave, Tracy, CA\",\r\n            tags: \"bar, restaurant, pub, beer, wine, ale, american, salad\",\r\n            foursquareId: \"4bdb23b5fed22d7f607e57c9\"\r\n          }, {\r\n            name: \"Thai Cafe\",\r\n            location: {lat: 37.73512, lng: -121.425557},\r\n            address: \"614 N Central Ave, Tracy, CA\",\r\n            tags: \"restaurant, food, thai\",\r\n            foursquareId: \"4bcf4d55caff952169e7ccf0\"\r\n          }, {\r\n            name: \"Magellan's Restaurant\",\r\n            location: {lat: 37.734987, lng: -121.425287},\r\n            address: \"15 E 6th St, Tracy, CA\",\r\n            tags: \"restaurant, food, italian, wine, salad\",\r\n            foursquareId: \"4c055e1e9a7920a1308ad279\"\r\n          }, {\r\n            name: \"Thai Jasmine\",\r\n            location: {lat: 37.738674, lng: -121.426778},\r\n            address: \"29 W 10th St, Tracy, CA\",\r\n            tags: \"restaurant, food, thai\",\r\n            foursquareId: \"538691ef498edfec60a568f5\"\r\n          }, {\r\n            name: \"World Coffee House\",\r\n            location: {lat: 37.738723, lng: -121.427695},\r\n            address: \"69 W 10th St, Tracy, CA\",\r\n            tags: \"coffee, cafe, tea\",\r\n            foursquareId: \"4dcedbc722718eed7a438b48\"\r\n          }]\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MapDetail extends Component {\r\n  static propTypes = {\r\n    foursquareInfo: PropTypes.object\r\n  }\r\n  render() {\r\n    const { foursquareInfo } = this.props\r\n    // put them into variables and add user friendlinesss\r\n    let imageURL = foursquareInfo.response.venue.bestPhoto.prefix + \"240x180\" + foursquareInfo.response.venue.bestPhoto.suffix\r\n    let address = foursquareInfo.response.venue.location.address + \", \" + foursquareInfo.response.venue.location.city + \", \" + foursquareInfo.response.venue.location.state\r\n    let phone = foursquareInfo.response.venue.contact.formattedPhone\r\n    let rating = foursquareInfo.response.venue.rating + \" out of 10\"\r\n\r\n    // check if info is missing\r\n    if (!foursquareInfo.response.venue.location.address)\r\n    {  address = \"No address listed, \" + foursquareInfo.response.venue.location.city + \", \" + foursquareInfo.response.venue.location.state  }\r\n    if (!foursquareInfo.response.venue.contact.formattedPhone)\r\n    {  phone = \"No phone listed\";  }\r\n    if (!foursquareInfo.response.venue.rating)\r\n    {  rating = \"No rating provided\"  }\r\n      return (\r\n        <div>\r\n        <h3>{foursquareInfo.response.venue.name}</h3>\r\n          <img className=\"d-block w-100\" src={imageURL} alt={foursquareInfo.response.venue.name} />\r\n          <p className=\"lead\">{address}</p>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">Price: <span className=\"text-success\">{foursquareInfo.response.venue.price.message}</span></li>\r\n            <li className=\"list-group-item\">Phone: {phone}</li>\r\n            <li className=\"list-group-item\">{foursquareInfo.response.venue.likes.count} people liked this place</li>\r\n            <li className=\"list-group-item\">Rating: {rating}</li>\r\n          </ul>\r\n          <small className=\"text-muted\">Data retrieved from FourSquare</small>\r\n        </div>\r\n      )\r\n  }\r\n}\r\nexport default MapDetail\r\n","import React, { Component } from 'react';\nimport * as FoursquareAPI from './FoursquareAPI';\nimport escapeRegExp from 'escape-string-regexp'\nimport { Map, TileLayer, Marker, Popup, ZoomControl } from 'react-leaflet';\nimport { locations } from './restaurantList'\nimport MapDetail from './MapDetail'\nimport './App.css';\n\n\n// Rule: alertMessage must be cleared after resets\nclass App extends Component {\n  /*\n    ****State Contents****\n        selectedRestaurant: data from a selected restaurant, for marker selection; object\n        selectedRestaurantInfo: data from a selected restaurant, for popup info; object\n        loaded: Logical statement to check if selectedRestaurantInfo is LOADED; boolean\n        locations: Lists all locations available in the map; array\n        locationMap: Lists ONLY the GPS cordinates for all locations; array\n        query: Search Query; string\n        result: Search Result; array\n        noResult: Check if user is searching for a restaurant; boolean\n        selected: Check if a selection is made; boolean\n        currentPosition: Set the current position of the map (downtown Tracy); array\n        alertType: Alert type (success, error, warning, info); string\n        alertMessage: Alert message/detail; string\n        sidebar: Toggles sidebar open/close; boolean\n  */\n  state = {\n    selectedRestaurant: {},\n    selectedRestaurantInfo: {},\n    loaded: false,\n    locations: locations,\n    locationMap: locations.location,\n    query: '',\n    result: [],\n    noResult: true,\n    selected: false,\n    currentPosition: [37.7383176, -121.4291585],\n    alertType: '',\n    alertMessage: '',\n    sidebar: true\n  }\n  // Reset the map marker selection\n  resetMap = () => {\n    this.setState({ selected: false, alertMessage: '' })\n  }\n  // Reset the Selected Restaurant Info\n  resetSelection = () => {\n    this.setState({ selectedRestaurantInfo: {}, loaded: false, alertMessage: '' })\n  }\n  // Throw Error Message function\n  throwError = (string) => {\n    this.setState({alertType: \"error\", alertMessage: string})\n  }\n  closeError = () => {\n    this.setState({alertType: \"\", alertMessage: \"\"})\n  }\n  // toggle sidebar\n  toggleSidebar = () => {\n    if (this.state.sidebar) {\n      this.setState({sidebar: false})\n    } else {\n      this.setState({sidebar: true})\n    }\n  }\n  // Update the search query and search for restaurants\n  updateQuery = (query) => {\n    this.setState({ query })\n    if (query) {\n        const match = new RegExp(escapeRegExp(query), 'i')\n        let searchedLocation = this.state.locations.filter((location) => match.test(location.name) || match.test(location.tags))\n        this.setState({result: searchedLocation, noResult: false, selected: false})\n      } else {\n        this.setState({result: [], noResult: true, selected: false})\n      }\n    }\n  // Updates the marker selection down to a specific restaurant, then centers the map towards that marker\n  updateSelectedRestaurant = (data) => {\n    this.setState({selectedRestaurant: data, selected: true, loaded: false, currentPosition: data.location})\n  }\n  // Fetch the restaurant via Foursquare API\n  fetchRestaurant = (id) => {\n    FoursquareAPI.getRestaurant(id)\n    .then((res) => {this.setState({selectedRestaurantInfo: res})})\n    .then(res => {\n      if (this.state.selectedRestaurantInfo) {\n        this.setState({loaded: true})\n      } else {\n        // its loaded, set state so content can load\n        this.setState({loaded: false, alertType: 'error', alertMessage: 'Unable to fetch FourSquare Info'})\n      }\n    })\n  }\n  render() {\n    const { selectedRestaurant, alertType, sidebar, locations, query, result, noResult, selected, currentPosition, selectedRestaurantInfo, loaded, alertMessage } = this.state\n    let mapInfo;\n    // if we have data loaded, then lets get the details :D\n    if (loaded) {\n      mapInfo = (\n        <MapDetail foursquareInfo={selectedRestaurantInfo} />\n      )\n    } else {\n      // no data inserted, then its either loading, or has an error. Display it to the user\n      let message;\n      if (alertMessage) {\n        message = alertMessage\n      } else {\n        message = \"Loading...\"\n      }\n      mapInfo = (\n        <p>{message}</p>\n      )\n    }\n    return (\n      <div>\n        {alertType === \"error\" && (\n        <div class=\"alert-error\">\n          <button onClick={(event) => this.closeError()}>close</button>\n          {alertMessage}\n        </div>\n        )}\n        {!sidebar && (\n        <button type=\"button\" className=\"btn btn-outline-dark map-toggle\" tabIndex=\"1\" onClick={(event) => this.toggleSidebar()}>Toggle Menu</button>\n        )}\n        {sidebar && (\n        <nav className=\"sidebar\">\n          <button type=\"button\" className=\"btn btn-outline-primary btn-block\" tabIndex=\"3\" onClick={(event) => this.toggleSidebar()}>Toggle Menu</button>\n          <div className=\"sidebar-header\">\n            <h1 className=\"logo\">Downtown Tracy Eats</h1>\n          </div>\n          <input type=\"text\" className=\"form-control search-form\" role=\"search\" placeholder=\"Search\" tabIndex=\"1\" value={query}\n              onChange={(event) => this.updateQuery(event.target.value)} onClick={(event) => this.resetMap()}/>\n            {result.length > 0 && (\n            <ul className=\"list-unstyled components results\">\n              {result.map((location) => (\n              <li key={location.foursquareId} role=\"link\"><button tabIndex=\"2\" onClick={(event) => this.updateSelectedRestaurant(location)}>{location.name}</button></li>\n              ))}\n            </ul>\n          )}\n          {noResult &&\n            <ul className=\"list-unstyled components results\">\n              {locations.map((location) =>\n                <li key={location.foursquareId} role=\"link\"><button tabIndex=\"2\" onClick={(event) => this.updateSelectedRestaurant(location)}>{location.name}</button></li>\n              )}\n            </ul>\n            }\n            {result.length === 0 && !noResult && (\n              <ul className=\"list-unstyled components results\" tabIndex=\"2\" >\n              <li>No results</li>\n              </ul>\n          )}\n        </nav>\n        )}\n        <Map\n          center={currentPosition}\n          zoom={16}\n          onClick={(event) => this.resetMap()}\n          zoomControl={false}\n          ontileerror={(event) => this.throwError('Error loading map tiles! Please check your internet connection.')}\n          role=\"application\"\n          >\n          <ZoomControl position=\"topright\"/>\n          <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='http://{s}.tile.osm.org/{z}/{x}/{y}.png' ontileerror={(event) => this.throwError('Error loading map tiles! Please check your internet connection.')}\n          />\n        {!selected && result.map((location) =>\n          <Marker key={`marker-${location.foursquareId}`} id={`marker-${location.foursquareId}`} position={location.location} onClick={(event) => this.fetchRestaurant(location.foursquareId)}>\n          <Popup className=\"popup-content\" id={location.foursquareId} key={`popup-${location.foursquareId}`}>\n            { mapInfo }\n          </Popup>\n        </Marker>\n        )}\n        {!selected && noResult && locations.map((location) =>\n          <Marker key={`marker-${location.foursquareId}`} id={`marker-${location.foursquareId}`} position={location.location} onClick={(event) => this.fetchRestaurant(location.foursquareId)} onPopupclose={(event) => this.resetSelection()}>\n          <Popup className=\"popup-content\" id={location.foursquareId} key={`popup-${location.foursquareId}`}>\n            { mapInfo }\n          </Popup>\n        </Marker>\n        )}\n        {selected && (\n          <Marker key={`marker-${selectedRestaurant.foursquareId}`} position={selectedRestaurant.location} onClick={(event) => this.fetchRestaurant(selectedRestaurant.foursquareId)}>\n          <Popup className=\"popup-content\" id={selectedRestaurant.foursquareId} key={`popup-${selectedRestaurant.foursquareId}`}>\n            { mapInfo }\n          </Popup>\n          </Marker>\n        )}\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}